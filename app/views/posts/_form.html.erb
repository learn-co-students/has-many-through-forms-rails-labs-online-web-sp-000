<style>
  .whatever {
    border: 2px solid #000;
  }
</style>

<%= form_for(@post) do |f| %>

  <p>
    <%= f.label :title %>
    <%= f.text_field :title %>
  </p>

  <p>
    <%= f.label :content %>
    <%= f.text_field :content %>
  </p>



  <!-- <% Category.all.each do |c| %>
    <p>
      <label for="category_id_<%= c.id %>"><%= c.name %></label>
      <input type="checkbox" name="post[category_ids][]" value="<%= c.id %>" id="category_id_<%= c.id %>">
    </p>
  <% end %> -->

  <!-- <%= f.fields_for :categories, Category.new do |category_builder| %>
    <%= category_builder.text_field :name %>
  <% end %> -->

  <!--
    1. f is attached to the post
    2. the fields_for method looks to see if the object (post) attached to f responds to a method called categories_attributes=
      3a. If the underlying object (post) does respond to that method, fields_for knows you're building a nested form
      3b. If the underlying object does not respond to that method, fields_for assumes something custom.
 -->

   <%= f.collection_check_boxes(:category_ids, Category.all, :id, :name) do |b| %>
     <p>
       <%= b.label :class => "whatever" %>
       <%= b.check_box %>
     </p>
   <% end %>

  <!-- #   collection_check_boxes(:post, :author_ids, Author.all, :id, :name_with_initial)   ### :post can be omitted cuz of form_for
  # Will generate a checkbox named post[category_ids][] for each category in Category.all
  # it will use the :id as the value for the checkbox, and the :name method as the label for the checkbox
  # collection_check_boxes(:post, :author_ids, Author.all, :id, :name_with_initial) -->
  <!-- # Category.all can be any array that responds to the two methods following it (:id, :name) -->

  <input type="text" id="post_categories_attributes_0_name" name="post[categories_attributes][0][name]" />
  <input type="text" id="post_categories_attributes_1_name" name="post[categories_attributes][1][name]" />

  <%= f.submit %>

<% end %>
